services:
  # 백엔드 API 서버 (메인 앱)
  app:
    build: .
    container_name: express_app
    ports:
      - 3001:3001
    volumes:
      - ./google-credentials:/app/google-credentials:ro
    env_file:
      - .env
    environment:
      NODE_ENV: development
      GOOGLE_APPLICATION_CREDENTIALS: /app/google-credentials/summer-bootcamp-465614-e3b0e0dffe15.json

    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped
    networks:
      - app-network
    command: npm run start

  # PostgreSQL 데이터베이스
  db:
    image: postgres:16
    container_name: postgres_db
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network

  # Redis (캐싱 및 세션 스토리지)
  redis:
    image: redis:7
    container_name: redis_server
    ports:
      - 6379:6379
    restart: unless-stopped
    networks:
      - app-network

  # Prisma 마이그레이션
  migrate:
    build: .
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: ${DATABASE_URL}
      NODE_ENV: ${NODE_ENV:-development}
    command: >
      sh -c "
          npx prisma migrate reset --force && npx prisma migrate dev --name init     
      "
    networks:
      - app-network

volumes:
  pgdata:

networks:
  app-network:
