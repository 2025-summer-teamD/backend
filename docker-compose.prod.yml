services:
  traefik:
    image: traefik:v3.0
    container_name: "traefik"
    env_file:
      - .env
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.directory=/etc/traefik/dynamic"
      - "--providers.file.watch=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.email=${LETSENCRYPT_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/etc/letsencrypt/acme.json"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--api.dashboard=true"
      - "--api.insecure=true"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/etc/letsencrypt"
      - "./traefik/traefik.yml:/etc/traefik/traefik.yml:ro"
      - "./traefik/dynamic.yml:/etc/traefik/dynamic/dynamic.yml:ro"
    networks:
      - app-network
    restart: unless-stopped

  app: # 백엔드 API 서비스
    build: .
    image: ${DOCKER_HUB_USERNAME}/your-repo-name:main
    container_name: express_app
    networks:
      - app-network
    env_file:
      - .env
    ports:
      - "3001:3001"
    labels:
      - "traefik.enable=true"
      # 백엔드 라우터 (api.anima.io.kr)
      - "traefik.http.routers.api.rule=Host(`api.${DOMAIN}`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=myresolver"
      - "traefik.http.services.api.loadbalancer.server.port=3001"
      # CORS 미들웨어 설정
      - "traefik.http.middlewares.cors.headers.accesscontrolallowmethods=GET,POST,PUT,DELETE,PATCH,OPTIONS"
      - "traefik.http.middlewares.cors.headers.accesscontrolalloworiginlist=https://anima.io.kr,http://localhost:5173"
      - "traefik.http.middlewares.cors.headers.accesscontrolallowheaders=Content-Type,Authorization"
      - "traefik.http.middlewares.cors.headers.accesscontrolallowcredentials=true"
      - "traefik.http.routers.api.middlewares=cors"
    command: npm run start

  # frontend: # 프론트엔드 서비스 (예시, 실제 서비스명에 맞게 수정)
  #   image: your-frontend-image:latest
  #   container_name: frontend_app
  #   networks:
  #     - app-network
  #   labels:
  #     - "traefik.enable=true"
  #     # 프론트엔드 라우터 (anima.io.kr)
  #     - "traefik.http.routers.frontend.rule=Host(`${DOMAIN}`)"
  #     - "traefik.http.routers.frontend.entrypoints=websecure"
  #     - "traefik.http.routers.frontend.tls.certresolver=myresolver"
  #     - "traefik.http.services.frontend.loadbalancer.server.port=80" # 프론트엔드 컨테이너 포트

  redis:
    image: redis:7
    container_name: redis_server
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - app-network

  # BullMQ 워커 (AI 채팅 처리)
  worker:
    build: .
    container_name: bullmq_worker
    volumes:
      - ./google-credentials:/app/google-credentials:ro
    env_file:
      - .env
    environment:
      NODE_ENV: production
      GOOGLE_APPLICATION_CREDENTIALS: /app/google-credentials/summer-bootcamp-465614-e3b0e0dffe15.json
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - app-network
    command: npm run worker

networks:
  app-network:
