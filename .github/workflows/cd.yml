on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # ✅ GCP 인증
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # ✅ gcloud CLI 설치
      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          version: latest

      # ✅ Compute Engine에 파일 복사
      - name: Copy files to GCP VM
        run: |
          gcloud compute scp \
            --zone ${{ secrets.GCP_ZONE }} \
            docker-compose.prod.yml docker-compose.monitoring.yml docker.sh \
            ${{ secrets.GCP_INSTANCE_NAME }}:~/

      # ✅ SSH 접속 후 배포 명령 실행 (자동 설치 + 최신 Docker Compose)
      - name: Deploy via gcloud ssh
        run: |
          gcloud compute ssh ${{ secrets.GCP_INSTANCE_NAME }} \
            --zone ${{ secrets.GCP_ZONE }} \
            --command "
              # ✅ 1. 최신 Docker 및 Compose 플러그인 설치
              if ! command -v docker &> /dev/null; then
                echo 'Installing Docker...'
                sudo apt-get update -y && sudo apt-get install -y docker.io
              fi
              if ! docker compose version &> /dev/null; then
                echo 'Installing Docker Compose plugin...'
                sudo apt-get install -y docker-compose-plugin
              fi

              # ✅ 2. 배포 스크립트 실행
              echo 'Pulling latest images...'
              docker compose -f docker-compose.prod.yml pull && \
              docker compose -f docker-compose.monitoring.yml pull

              echo 'Starting containers...'
              docker compose -f docker-compose.prod.yml up -d && \
              docker compose -f docker-compose.monitoring.yml up -d

              echo 'Cleaning unused Docker resources...'
              docker system prune -af
            "
