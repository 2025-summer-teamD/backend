// Prisma schema file

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ChatLogType {
  text
  image
  video
}

enum ChatLogSpeaker {
  user
  ai
}

model User {
  clerk_id   String   @id @unique
  created_at DateTime @default(now())
  updated_at DateTime?
  is_deleted Boolean  @default(false)
  personas   Persona[]
  chatRooms  ChatRoom[]
}

model Persona {
  id           Int      @id @default(autoincrement()) @unique
  clerk_id     String
  user         User     @relation(fields: [clerk_id], references: [clerk_id])
  name         String   @db.VarChar(100)
  image_url    String   @db.VarChar(1024)
  is_public    Boolean  @default(true)
  introduction String?
  prompt       Json
  uses_count   Int      @default(0)
  likes_count  Int      @default(0)
  created_at   DateTime @default(now())
  updated_at   DateTime?
  is_deleted   Boolean  @default(false)
  chatRooms    ChatRoom[]
}

model ChatRoom {
  id           Int      @id @default(autoincrement()) @unique
  clerk_id     String
  user         User     @relation(fields: [clerk_id], references: [clerk_id])
  character_id Int
  persona      Persona  @relation(fields: [character_id], references: [id])
  friendship   Int      @default(1)
  exp          Int      @default(0)
  likes        Boolean  @default(false)
  created_at   DateTime @default(now())
  updated_at   DateTime?
  is_deleted   Boolean  @default(false)
  ChatLogs     ChatLog[]
}

model ChatLog {
  id          Int           @id @default(autoincrement()) @unique
  chatroom_id Int
  chatRoom    ChatRoom      @relation(fields: [chatroom_id], references: [id])
  text        String
  type        ChatLogType
  speaker     ChatLogSpeaker
  time        DateTime @default(now())
  is_deleted  Boolean  @default(false)
}
